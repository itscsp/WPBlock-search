{"version":3,"file":"video-search/view.js","mappings":"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","sources":["webpack://video-search/./src/video-search/view.js"],"sourcesContent":["/**\n * Use this file for JavaScript code that you want to run in the front-end\n * on posts/pages that contain this block.\n *\n * When this file is defined as the value of the `viewScript` property\n * in `block.json` it will be enqueued on the front end of the site.\n *\n * Example:\n *\n * ```js\n * {\n *   \"viewScript\": \"file:./view.js\"\n * }\n * ```\n *\n * If you're not making any changes to this file because your project doesn't need any\n * JavaScript running in the front-end, then you should delete this file and remove\n * the `viewScript` property from `block.json`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-metadata/#view-script\n */\n\n/* eslint-disable no-console */\nconsole.log( 'Hello World! (from create-block-video-search block)' );\n/* eslint-enable no-console */\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const searchBlocks = document.querySelectorAll('.video-search-block');\n    \n    searchBlocks.forEach(block => {\n        const searchInput = block.querySelector('.video-search-input');\n        const searchButton = block.querySelector('.video-search-button');\n        const modal = block.querySelector('.video-search-modal');\n        const modalInput = block.querySelector('.modal-search-input');\n        const modalButton = block.querySelector('.modal-search-button');\n        const closeButton = block.querySelector('.video-search-modal-close');\n        const resultsContainer = block.querySelector('.video-search-results');\n        const postTypes = JSON.parse(block.dataset.postTypes || '[\"post\", \"page\"]');\n        const searchText = block.dataset.searchText || 'Search';\n\n        // Function to perform search\n        const performSearch = async (searchTerm) => {\n            try {\n                resultsContainer.innerHTML = '<p>Searching...</p>';\n                \n                // Get posts directly using the posts endpoint\n                const postsResponse = await fetch(`/wp-json/wp/v2/posts?search=${encodeURIComponent(searchTerm)}&per_page=10&_embed`);\n                \n                if (!postsResponse.ok) {\n                    throw new Error('Search failed');\n                }\n\n                const posts = await postsResponse.json();\n                \n                if (posts.length === 0) {\n                    resultsContainer.innerHTML = '<p>No results found.</p>';\n                    return;\n                }\n\n                displayResults(posts);\n            } catch (error) {\n                console.error('Search error:', error);\n                resultsContainer.innerHTML = '<p>Error performing search. Please try again.</p>';\n            }\n        };\n\n        // Function to display results\n        const displayResults = (posts) => {\n            if (posts.length === 0) {\n                resultsContainer.innerHTML = '<p>No results found.</p>';\n                return;\n            }\n\n            const resultsHTML = posts.map(post => `\n                <div class=\"search-result-item\">\n                    <h3><a href=\"${post.link}\">${post.title.rendered}</a></h3>\n                    <div class=\"search-result-content\">\n                        ${post.excerpt.rendered}\n                    </div>\n                    <div class=\"search-result-meta\">\n                        <span class=\"post-type\">${post.type}</span>\n                        <span class=\"post-date\">${new Date(post.date).toLocaleDateString()}</span>\n                    </div>\n                </div>\n            `).join('');\n\n            resultsContainer.innerHTML = resultsHTML;\n        };\n\n        // Function to handle search\n        const handleSearch = (input) => {\n            const searchTerm = input.value.trim();\n            if (searchTerm) {\n                performSearch(searchTerm);\n            }\n        };\n\n        // Event Listeners for main search\n        searchButton.addEventListener('click', () => {\n            handleSearch(searchInput);\n            if (searchInput.value.trim()) {\n                modal.style.display = 'block';\n                modalInput.value = searchInput.value;\n            }\n        });\n\n        searchInput.addEventListener('keypress', (e) => {\n            if (e.key === 'Enter') {\n                e.preventDefault();\n                handleSearch(searchInput);\n                if (searchInput.value.trim()) {\n                    modal.style.display = 'block';\n                    modalInput.value = searchInput.value;\n                }\n            }\n        });\n\n        // Event Listeners for modal search\n        modalButton.addEventListener('click', () => {\n            handleSearch(modalInput);\n        });\n\n        modalInput.addEventListener('keypress', (e) => {\n            if (e.key === 'Enter') {\n                e.preventDefault();\n                handleSearch(modalInput);\n            }\n        });\n\n        // Close modal\n        closeButton.addEventListener('click', () => {\n            modal.style.display = 'none';\n        });\n\n        window.addEventListener('click', (e) => {\n            if (e.target === modal) {\n                modal.style.display = 'none';\n            }\n        });\n    });\n});\n"],"names":["console","log","document","addEventListener","searchBlocks","querySelectorAll","forEach","block","searchInput","querySelector","searchButton","modal","modalInput","modalButton","closeButton","resultsContainer","postTypes","JSON","parse","dataset","searchText","performSearch","searchTerm","innerHTML","postsResponse","fetch","encodeURIComponent","ok","Error","posts","json","length","displayResults","error","resultsHTML","map","post","link","title","rendered","excerpt","type","Date","date","toLocaleDateString","join","handleSearch","input","value","trim","style","display","e","key","preventDefault","window","target"],"sourceRoot":""}